//
//  Generated by https://www.npmjs.com/package/amd-bundle
//
(function (factory) {

    if ((typeof define === 'function')  &&  define.amd)
        define('Issue', ["web-cell","github-element"], factory);
    else if (typeof module === 'object')
        return  module.exports = factory.call(global,require('web-cell'),require('github-element'));
    else
        return  this['Issue'] = factory.call(self,this['web-cell'],this['github-element']);

})(function (web_cell,github_element) {

function merge(base, path) {
  return (base + '/' + path).replace(/\/\//g, '/').replace(/[^/.]+\/\.\.\//g, '').replace(/\.\//g, function (match, index, input) {
    return input[index - 1] === '.' ? match : '';
  });
}

function outPackage(name) {
  return /^[^./]/.test(name);
}

    var require = (typeof module === 'object') ?
        function () {

            return  module.require.apply(module, arguments);
        } : (
            this.require  ||  function (name) {

                if (self[name] != null)  return self[name];

                throw ReferenceError('Can\'t find "' + name + '" module');
            }
        );

    var _include_ = include.bind(null, './');

    function include(base, path) {

        path = outPackage( path )  ?  path  :  ('./' + merge(base, path));

        var module = _module_[path], exports;

        if (! module)  return require(path);

        if (! module.exports) {

            module.exports = { };

            var dependency = module.dependency;

            for (var i = 0;  dependency[i];  i++)
                module.dependency[i] = _include_( dependency[i] );

            exports = module.factory.apply(
                null,  module.dependency.concat(
                    include.bind(null, module.base),  module.exports,  module
                )
            );

            if (exports != null)  module.exports = exports;

            delete module.dependency;  delete module.factory;
        }

        return module.exports;
    }

function _typeof(obj) {
    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
        _typeof = function _typeof(obj) {
            return typeof obj;
        };
    } else {
        _typeof = function _typeof(obj) {
            return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
        };
    }
    return _typeof(obj);
}

function _slicedToArray(arr, i) {
    return (
        _arrayWithHoles(arr) ||
        _iterableToArrayLimit(arr, i) ||
        _nonIterableRest()
    );
}

function _iterableToArrayLimit(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;
    try {
        for (
            var _i = arr[Symbol.iterator](), _s;
            !(_n = (_s = _i.next()).done);
            _n = true
        ) {
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally {
        try {
            if (!_n && _i['return'] != null) _i['return']();
        } finally {
            if (_d) throw _e;
        }
    }
    return _arr;
}

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}

function _asyncToGenerator(fn) {
    return function() {
        var self = this,
            args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep(
                    gen,
                    resolve,
                    reject,
                    _next,
                    _throw,
                    'next',
                    value
                );
            }
            function _throw(err) {
                asyncGeneratorStep(
                    gen,
                    resolve,
                    reject,
                    _next,
                    _throw,
                    'throw',
                    err
                );
            }
            _next(undefined);
        });
    };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
    }
}

function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {
        return call;
    }
    return _assertThisInitialized(self);
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError(
            'Super expression must either be null or a function'
        );
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: { value: subClass, writable: true, configurable: true }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
    _setPrototypeOf =
        Object.setPrototypeOf ||
        function _setPrototypeOf(o, p) {
            o.__proto__ = p;
            return o;
        };
    return _setPrototypeOf(o, p);
}

function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        );
    }
    return self;
}

function _decorate(decorators, factory, superClass) {
    var r = factory(function initialize(O) {
        _initializeInstanceElements(O, decorated.elements);
    }, superClass);
    var decorated = _decorateClass(
        _coalesceClassElements(r.d.map(_createElementDescriptor)),
        decorators
    );
    _initializeClassElements(r.F, decorated.elements);
    return _runClassFinishers(r.F, decorated.finishers);
}

function _createElementDescriptor(def) {
    var key = _toPropertyKey(def.key);
    var descriptor;
    if (def.kind === 'method') {
        descriptor = {
            value: def.value,
            writable: true,
            configurable: true,
            enumerable: false
        };
        Object.defineProperty(def.value, 'name', {
            value: _typeof(key) === 'symbol' ? '' : key,
            configurable: true
        });
    } else if (def.kind === 'get') {
        descriptor = { get: def.value, configurable: true, enumerable: false };
    } else if (def.kind === 'set') {
        descriptor = { set: def.value, configurable: true, enumerable: false };
    } else if (def.kind === 'field') {
        descriptor = { configurable: true, writable: true, enumerable: true };
    }
    var element = {
        kind: def.kind === 'field' ? 'field' : 'method',
        key: key,
        placement: def.static
            ? 'static'
            : def.kind === 'field'
            ? 'own'
            : 'prototype',
        descriptor: descriptor
    };
    if (def.decorators) element.decorators = def.decorators;
    if (def.kind === 'field') element.initializer = def.value;
    return element;
}

function _coalesceGetterSetter(element, other) {
    if (element.descriptor.get !== undefined) {
        other.descriptor.get = element.descriptor.get;
    } else {
        other.descriptor.set = element.descriptor.set;
    }
}

function _coalesceClassElements(elements) {
    var newElements = [];
    var isSameElement = function isSameElement(other) {
        return (
            other.kind === 'method' &&
            other.key === element.key &&
            other.placement === element.placement
        );
    };
    for (var i = 0; i < elements.length; i++) {
        var element = elements[i];
        var other;
        if (
            element.kind === 'method' &&
            (other = newElements.find(isSameElement))
        ) {
            if (
                _isDataDescriptor(element.descriptor) ||
                _isDataDescriptor(other.descriptor)
            ) {
                if (_hasDecorators(element) || _hasDecorators(other)) {
                    throw new ReferenceError(
                        'Duplicated methods (' +
                            element.key +
                            ") can't be decorated."
                    );
                }
                other.descriptor = element.descriptor;
            } else {
                if (_hasDecorators(element)) {
                    if (_hasDecorators(other)) {
                        throw new ReferenceError(
                            "Decorators can't be placed on different accessors with for " +
                                'the same property (' +
                                element.key +
                                ').'
                        );
                    }
                    other.decorators = element.decorators;
                }
                _coalesceGetterSetter(element, other);
            }
        } else {
            newElements.push(element);
        }
    }
    return newElements;
}

function _hasDecorators(element) {
    return element.decorators && element.decorators.length;
}

function _isDataDescriptor(desc) {
    return (
        desc !== undefined &&
        !(desc.value === undefined && desc.writable === undefined)
    );
}

function _initializeClassElements(F, elements) {
    var proto = F.prototype;
    ['method', 'field'].forEach(function(kind) {
        elements.forEach(function(element) {
            var placement = element.placement;
            if (
                element.kind === kind &&
                (placement === 'static' || placement === 'prototype')
            ) {
                var receiver = placement === 'static' ? F : proto;
                _defineClassElement(receiver, element);
            }
        });
    });
}

function _initializeInstanceElements(O, elements) {
    ['method', 'field'].forEach(function(kind) {
        elements.forEach(function(element) {
            if (element.kind === kind && element.placement === 'own') {
                _defineClassElement(O, element);
            }
        });
    });
}

function _defineClassElement(receiver, element) {
    var descriptor = element.descriptor;
    if (element.kind === 'field') {
        var initializer = element.initializer;
        descriptor = {
            enumerable: descriptor.enumerable,
            writable: descriptor.writable,
            configurable: descriptor.configurable,
            value: initializer === void 0 ? void 0 : initializer.call(receiver)
        };
    }
    Object.defineProperty(receiver, element.key, descriptor);
}

function _decorateClass(elements, decorators) {
    var newElements = [];
    var finishers = [];
    var placements = { static: [], prototype: [], own: [] };
    elements.forEach(function(element) {
        _addElementPlacement(element, placements);
    });
    elements.forEach(function(element) {
        if (!_hasDecorators(element)) return newElements.push(element);
        var elementFinishersExtras = _decorateElement(element, placements);
        newElements.push(elementFinishersExtras.element);
        newElements.push.apply(newElements, elementFinishersExtras.extras);
        finishers.push.apply(finishers, elementFinishersExtras.finishers);
    });
    if (!decorators) {
        return { elements: newElements, finishers: finishers };
    }
    var result = _decorateConstructor(newElements, decorators);
    finishers.push.apply(finishers, result.finishers);
    result.finishers = finishers;
    return result;
}

function _addElementPlacement(element, placements, silent) {
    var keys = placements[element.placement];
    if (!silent && keys.indexOf(element.key) !== -1) {
        throw new TypeError('Duplicated element (' + element.key + ')');
    }
    keys.push(element.key);
}

function _decorateElement(element, placements) {
    var extras = [];
    var finishers = [];
    for (
        var decorators = element.decorators, i = decorators.length - 1;
        i >= 0;
        i--
    ) {
        var keys = placements[element.placement];
        keys.splice(keys.indexOf(element.key), 1);
        var elementObject = _fromElementDescriptor(element);
        var elementFinisherExtras = _toElementFinisherExtras(
            (0, decorators[i])(elementObject) || elementObject
        );
        element = elementFinisherExtras.element;
        _addElementPlacement(element, placements);
        if (elementFinisherExtras.finisher) {
            finishers.push(elementFinisherExtras.finisher);
        }
        var newExtras = elementFinisherExtras.extras;
        if (newExtras) {
            for (var j = 0; j < newExtras.length; j++) {
                _addElementPlacement(newExtras[j], placements);
            }
            extras.push.apply(extras, newExtras);
        }
    }
    return { element: element, finishers: finishers, extras: extras };
}

function _decorateConstructor(elements, decorators) {
    var finishers = [];
    for (var i = decorators.length - 1; i >= 0; i--) {
        var obj = _fromClassDescriptor(elements);
        var elementsAndFinisher = _toClassDescriptor(
            (0, decorators[i])(obj) || obj
        );
        if (elementsAndFinisher.finisher !== undefined) {
            finishers.push(elementsAndFinisher.finisher);
        }
        if (elementsAndFinisher.elements !== undefined) {
            elements = elementsAndFinisher.elements;
            for (var j = 0; j < elements.length - 1; j++) {
                for (var k = j + 1; k < elements.length; k++) {
                    if (
                        elements[j].key === elements[k].key &&
                        elements[j].placement === elements[k].placement
                    ) {
                        throw new TypeError(
                            'Duplicated element (' + elements[j].key + ')'
                        );
                    }
                }
            }
        }
    }
    return { elements: elements, finishers: finishers };
}

function _fromElementDescriptor(element) {
    var obj = {
        kind: element.kind,
        key: element.key,
        placement: element.placement,
        descriptor: element.descriptor
    };
    var desc = { value: 'Descriptor', configurable: true };
    Object.defineProperty(obj, Symbol.toStringTag, desc);
    if (element.kind === 'field') obj.initializer = element.initializer;
    return obj;
}

function _toElementDescriptors(elementObjects) {
    if (elementObjects === undefined) return;
    return _toArray(elementObjects).map(function(elementObject) {
        var element = _toElementDescriptor(elementObject);
        _disallowProperty(elementObject, 'finisher', 'An element descriptor');
        _disallowProperty(elementObject, 'extras', 'An element descriptor');
        return element;
    });
}

function _toElementDescriptor(elementObject) {
    var kind = String(elementObject.kind);
    if (kind !== 'method' && kind !== 'field') {
        throw new TypeError(
            'An element descriptor\'s .kind property must be either "method" or' +
                ' "field", but a decorator created an element descriptor with' +
                ' .kind "' +
                kind +
                '"'
        );
    }
    var key = _toPropertyKey(elementObject.key);
    var placement = String(elementObject.placement);
    if (
        placement !== 'static' &&
        placement !== 'prototype' &&
        placement !== 'own'
    ) {
        throw new TypeError(
            'An element descriptor\'s .placement property must be one of "static",' +
                ' "prototype" or "own", but a decorator created an element descriptor' +
                ' with .placement "' +
                placement +
                '"'
        );
    }
    var descriptor = elementObject.descriptor;
    _disallowProperty(elementObject, 'elements', 'An element descriptor');
    var element = {
        kind: kind,
        key: key,
        placement: placement,
        descriptor: Object.assign({}, descriptor)
    };
    if (kind !== 'field') {
        _disallowProperty(elementObject, 'initializer', 'A method descriptor');
    } else {
        _disallowProperty(
            descriptor,
            'get',
            'The property descriptor of a field descriptor'
        );
        _disallowProperty(
            descriptor,
            'set',
            'The property descriptor of a field descriptor'
        );
        _disallowProperty(
            descriptor,
            'value',
            'The property descriptor of a field descriptor'
        );
        element.initializer = elementObject.initializer;
    }
    return element;
}

function _toElementFinisherExtras(elementObject) {
    var element = _toElementDescriptor(elementObject);
    var finisher = _optionalCallableProperty(elementObject, 'finisher');
    var extras = _toElementDescriptors(elementObject.extras);
    return { element: element, finisher: finisher, extras: extras };
}

function _fromClassDescriptor(elements) {
    var obj = { kind: 'class', elements: elements.map(_fromElementDescriptor) };
    var desc = { value: 'Descriptor', configurable: true };
    Object.defineProperty(obj, Symbol.toStringTag, desc);
    return obj;
}

function _toClassDescriptor(obj) {
    var kind = String(obj.kind);
    if (kind !== 'class') {
        throw new TypeError(
            'A class descriptor\'s .kind property must be "class", but a decorator' +
                ' created a class descriptor with .kind "' +
                kind +
                '"'
        );
    }
    _disallowProperty(obj, 'key', 'A class descriptor');
    _disallowProperty(obj, 'placement', 'A class descriptor');
    _disallowProperty(obj, 'descriptor', 'A class descriptor');
    _disallowProperty(obj, 'initializer', 'A class descriptor');
    _disallowProperty(obj, 'extras', 'A class descriptor');
    var finisher = _optionalCallableProperty(obj, 'finisher');
    var elements = _toElementDescriptors(obj.elements);
    return { elements: elements, finisher: finisher };
}

function _disallowProperty(obj, name, objectType) {
    if (obj[name] !== undefined) {
        throw new TypeError(
            objectType + " can't have a ." + name + ' property.'
        );
    }
}

function _optionalCallableProperty(obj, name) {
    var value = obj[name];
    if (value !== undefined && typeof value !== 'function') {
        throw new TypeError("Expected '" + name + "' to be a function");
    }
    return value;
}

function _runClassFinishers(constructor, finishers) {
    for (var i = 0; i < finishers.length; i++) {
        var newConstructor = (0, finishers[i])(constructor);
        if (newConstructor !== undefined) {
            if (typeof newConstructor !== 'function') {
                throw new TypeError('Finishers must return a constructor.');
            }
            constructor = newConstructor;
        }
    }
    return constructor;
}

function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, 'string');
    return _typeof(key) === 'symbol' ? key : String(key);
}

function _toPrimitive(input, hint) {
    if (_typeof(input) !== 'object' || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
        var res = prim.call(input, hint || 'default');
        if (_typeof(res) !== 'object') return res;
        throw new TypeError('@@toPrimitive must return a primitive value.');
    }
    return (hint === 'string' ? String : Number)(input);
}

function _toArray(arr) {
    return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();
}

function _nonIterableRest() {
    throw new TypeError('Invalid attempt to destructure non-iterable instance');
}

function _iterableToArray(iter) {
    if (
        Symbol.iterator in Object(iter) ||
        Object.prototype.toString.call(iter) === '[object Arguments]'
    )
        return Array.from(iter);
}

function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}

function _get(target, property, receiver) {
    if (typeof Reflect !== 'undefined' && Reflect.get) {
        _get = Reflect.get;
    } else {
        _get = function _get(target, property, receiver) {
            var base = _superPropBase(target, property);
            if (!base) return;
            var desc = Object.getOwnPropertyDescriptor(base, property);
            if (desc.get) {
                return desc.get.call(receiver);
            }
            return desc.value;
        };
    }
    return _get(target, property, receiver || target);
}

function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _getPrototypeOf(object);
        if (object === null) break;
    }
    return object;
}

function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf
        ? Object.getPrototypeOf
        : function _getPrototypeOf(o) {
              return o.__proto__ || Object.getPrototypeOf(o);
          };
    return _getPrototypeOf(o);
}

var _module_ = {
    './index.less': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            exports.default = void 0;
            var _default =
                'div > h1 > span {\n  display: inline-block;padding: 0.25em 0.4em;font-size: 75%;font-weight: 700;line-height: 1;text-align: center;white-space: nowrap;vertical-align: baseline;border-radius: 0.25rem;\n}\n@media print {\n  div > h1 > span {\n    border: 1px solid #000;\n  }\n}\n@font-face {\n  font-family: octicons-link;\n  src: url(data:font/woff;charset=utf-8;base64,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) format(\'woff\');\n}\n.markdown-body {\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  color: #24292e;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  font-size: 16px;\n  line-height: 1.5;\n  word-wrap: break-word;\n}\n.markdown-body .pl-c {\n  color: #6a737d;\n}\n.markdown-body .pl-c1,\n.markdown-body .pl-s .pl-v {\n  color: #005cc5;\n}\n.markdown-body .pl-e,\n.markdown-body .pl-en {\n  color: #6f42c1;\n}\n.markdown-body .pl-smi,\n.markdown-body .pl-s .pl-s1 {\n  color: #24292e;\n}\n.markdown-body .pl-ent {\n  color: #22863a;\n}\n.markdown-body .pl-k {\n  color: #d73a49;\n}\n.markdown-body .pl-s,\n.markdown-body .pl-pds,\n.markdown-body .pl-s .pl-pse .pl-s1,\n.markdown-body .pl-sr,\n.markdown-body .pl-sr .pl-cce,\n.markdown-body .pl-sr .pl-sre,\n.markdown-body .pl-sr .pl-sra {\n  color: #032f62;\n}\n.markdown-body .pl-v,\n.markdown-body .pl-smw {\n  color: #e36209;\n}\n.markdown-body .pl-bu {\n  color: #b31d28;\n}\n.markdown-body .pl-ii {\n  color: #fafbfc;\n  background-color: #b31d28;\n}\n.markdown-body .pl-c2 {\n  color: #fafbfc;\n  background-color: #d73a49;\n}\n.markdown-body .pl-c2::before {\n  content: "^M";\n}\n.markdown-body .pl-sr .pl-cce {\n  font-weight: bold;\n  color: #22863a;\n}\n.markdown-body .pl-ml {\n  color: #735c0f;\n}\n.markdown-body .pl-mh,\n.markdown-body .pl-mh .pl-en,\n.markdown-body .pl-ms {\n  font-weight: bold;\n  color: #005cc5;\n}\n.markdown-body .pl-mi {\n  font-style: italic;\n  color: #24292e;\n}\n.markdown-body .pl-mb {\n  font-weight: bold;\n  color: #24292e;\n}\n.markdown-body .pl-md {\n  color: #b31d28;\n  background-color: #ffeef0;\n}\n.markdown-body .pl-mi1 {\n  color: #22863a;\n  background-color: #f0fff4;\n}\n.markdown-body .pl-mc {\n  color: #e36209;\n  background-color: #ffebda;\n}\n.markdown-body .pl-mi2 {\n  color: #f6f8fa;\n  background-color: #005cc5;\n}\n.markdown-body .pl-mdr {\n  font-weight: bold;\n  color: #6f42c1;\n}\n.markdown-body .pl-ba {\n  color: #586069;\n}\n.markdown-body .pl-sg {\n  color: #959da5;\n}\n.markdown-body .pl-corl {\n  text-decoration: underline;\n  color: #032f62;\n}\n.markdown-body .octicon {\n  display: inline-block;\n  vertical-align: text-top;\n  fill: currentColor;\n}\n.markdown-body a {\n  background-color: transparent;\n}\n.markdown-body a:active,\n.markdown-body a:hover {\n  outline-width: 0;\n}\n.markdown-body strong {\n  font-weight: inherit;\n}\n.markdown-body strong {\n  font-weight: bolder;\n}\n.markdown-body h1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n.markdown-body img {\n  border-style: none;\n}\n.markdown-body code,\n.markdown-body kbd,\n.markdown-body pre {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n.markdown-body hr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible;\n}\n.markdown-body input {\n  font: inherit;\n  margin: 0;\n}\n.markdown-body input {\n  overflow: visible;\n}\n.markdown-body [type="checkbox"] {\n  box-sizing: border-box;\n  padding: 0;\n}\n.markdown-body * {\n  box-sizing: border-box;\n}\n.markdown-body input {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n.markdown-body a {\n  color: #0366d6;\n  text-decoration: none;\n}\n.markdown-body a:hover {\n  text-decoration: underline;\n}\n.markdown-body strong {\n  font-weight: 600;\n}\n.markdown-body hr {\n  height: 0;\n  margin: 15px 0;\n  overflow: hidden;\n  background: transparent;\n  border: 0;\n  border-bottom: 1px solid #dfe2e5;\n}\n.markdown-body hr::before {\n  display: table;\n  content: "";\n}\n.markdown-body hr::after {\n  display: table;\n  clear: both;\n  content: "";\n}\n.markdown-body table {\n  border-spacing: 0;\n  border-collapse: collapse;\n}\n.markdown-body td,\n.markdown-body th {\n  padding: 0;\n}\n.markdown-body h1,\n.markdown-body h2,\n.markdown-body h3,\n.markdown-body h4,\n.markdown-body h5,\n.markdown-body h6 {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n.markdown-body h1 {\n  font-size: 32px;\n  font-weight: 600;\n}\n.markdown-body h2 {\n  font-size: 24px;\n  font-weight: 600;\n}\n.markdown-body h3 {\n  font-size: 20px;\n  font-weight: 600;\n}\n.markdown-body h4 {\n  font-size: 16px;\n  font-weight: 600;\n}\n.markdown-body h5 {\n  font-size: 14px;\n  font-weight: 600;\n}\n.markdown-body h6 {\n  font-size: 12px;\n  font-weight: 600;\n}\n.markdown-body p {\n  margin-top: 0;\n  margin-bottom: 10px;\n}\n.markdown-body blockquote {\n  margin: 0;\n}\n.markdown-body ul,\n.markdown-body ol {\n  padding-left: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n.markdown-body ol ol,\n.markdown-body ul ol {\n  list-style-type: lower-roman;\n}\n.markdown-body ul ul ol,\n.markdown-body ul ol ol,\n.markdown-body ol ul ol,\n.markdown-body ol ol ol {\n  list-style-type: lower-alpha;\n}\n.markdown-body dd {\n  margin-left: 0;\n}\n.markdown-body code {\n  font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace;\n  font-size: 12px;\n}\n.markdown-body pre {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace;\n  font-size: 12px;\n}\n.markdown-body .octicon {\n  vertical-align: text-bottom;\n}\n.markdown-body .pl-0 {\n  padding-left: 0 !important;\n}\n.markdown-body .pl-1 {\n  padding-left: 4px !important;\n}\n.markdown-body .pl-2 {\n  padding-left: 8px !important;\n}\n.markdown-body .pl-3 {\n  padding-left: 16px !important;\n}\n.markdown-body .pl-4 {\n  padding-left: 24px !important;\n}\n.markdown-body .pl-5 {\n  padding-left: 32px !important;\n}\n.markdown-body .pl-6 {\n  padding-left: 40px !important;\n}\n.markdown-body::before {\n  display: table;\n  content: "";\n}\n.markdown-body::after {\n  display: table;\n  clear: both;\n  content: "";\n}\n.markdown-body > *:first-child {\n  margin-top: 0 !important;\n}\n.markdown-body > *:last-child {\n  margin-bottom: 0 !important;\n}\n.markdown-body a:not([href]) {\n  color: inherit;\n  text-decoration: none;\n}\n.markdown-body .anchor {\n  float: left;\n  padding-right: 4px;\n  margin-left: -20px;\n  line-height: 1;\n}\n.markdown-body .anchor:focus {\n  outline: none;\n}\n.markdown-body p,\n.markdown-body blockquote,\n.markdown-body ul,\n.markdown-body ol,\n.markdown-body dl,\n.markdown-body table,\n.markdown-body pre {\n  margin-top: 0;\n  margin-bottom: 16px;\n}\n.markdown-body hr {\n  height: 0.25em;\n  padding: 0;\n  margin: 24px 0;\n  background-color: #e1e4e8;\n  border: 0;\n}\n.markdown-body blockquote {\n  padding: 0 1em;\n  color: #6a737d;\n  border-left: 0.25em solid #dfe2e5;\n}\n.markdown-body blockquote > :first-child {\n  margin-top: 0;\n}\n.markdown-body blockquote > :last-child {\n  margin-bottom: 0;\n}\n.markdown-body kbd {\n  display: inline-block;\n  padding: 3px 5px;\n  font-size: 11px;\n  line-height: 10px;\n  color: #444d56;\n  vertical-align: middle;\n  background-color: #fafbfc;\n  border: solid 1px #c6cbd1;\n  border-bottom-color: #959da5;\n  border-radius: 3px;\n  box-shadow: inset 0 -1px 0 #959da5;\n}\n.markdown-body h1,\n.markdown-body h2,\n.markdown-body h3,\n.markdown-body h4,\n.markdown-body h5,\n.markdown-body h6 {\n  margin-top: 24px;\n  margin-bottom: 16px;\n  font-weight: 600;\n  line-height: 1.25;\n}\n.markdown-body h1 .octicon-link,\n.markdown-body h2 .octicon-link,\n.markdown-body h3 .octicon-link,\n.markdown-body h4 .octicon-link,\n.markdown-body h5 .octicon-link,\n.markdown-body h6 .octicon-link {\n  color: #1b1f23;\n  vertical-align: middle;\n  visibility: hidden;\n}\n.markdown-body h1:hover .anchor,\n.markdown-body h2:hover .anchor,\n.markdown-body h3:hover .anchor,\n.markdown-body h4:hover .anchor,\n.markdown-body h5:hover .anchor,\n.markdown-body h6:hover .anchor {\n  text-decoration: none;\n}\n.markdown-body h1:hover .anchor .octicon-link,\n.markdown-body h2:hover .anchor .octicon-link,\n.markdown-body h3:hover .anchor .octicon-link,\n.markdown-body h4:hover .anchor .octicon-link,\n.markdown-body h5:hover .anchor .octicon-link,\n.markdown-body h6:hover .anchor .octicon-link {\n  visibility: visible;\n}\n.markdown-body h1 {\n  padding-bottom: 0.3em;\n  font-size: 2em;\n  border-bottom: 1px solid #eaecef;\n}\n.markdown-body h2 {\n  padding-bottom: 0.3em;\n  font-size: 1.5em;\n  border-bottom: 1px solid #eaecef;\n}\n.markdown-body h3 {\n  font-size: 1.25em;\n}\n.markdown-body h4 {\n  font-size: 1em;\n}\n.markdown-body h5 {\n  font-size: 0.875em;\n}\n.markdown-body h6 {\n  font-size: 0.85em;\n  color: #6a737d;\n}\n.markdown-body ul,\n.markdown-body ol {\n  padding-left: 2em;\n}\n.markdown-body ul ul,\n.markdown-body ul ol,\n.markdown-body ol ol,\n.markdown-body ol ul {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n.markdown-body li {\n  word-wrap: break-all;\n}\n.markdown-body li > p {\n  margin-top: 16px;\n}\n.markdown-body li + li {\n  margin-top: 0.25em;\n}\n.markdown-body dl {\n  padding: 0;\n}\n.markdown-body dl dt {\n  padding: 0;\n  margin-top: 16px;\n  font-size: 1em;\n  font-style: italic;\n  font-weight: 600;\n}\n.markdown-body dl dd {\n  padding: 0 16px;\n  margin-bottom: 16px;\n}\n.markdown-body table {\n  display: block;\n  width: 100%;\n  overflow: auto;\n}\n.markdown-body table th {\n  font-weight: 600;\n}\n.markdown-body table th,\n.markdown-body table td {\n  padding: 6px 13px;\n  border: 1px solid #dfe2e5;\n}\n.markdown-body table tr {\n  background-color: #fff;\n  border-top: 1px solid #c6cbd1;\n}\n.markdown-body table tr:nth-child(2n) {\n  background-color: #f6f8fa;\n}\n.markdown-body img {\n  max-width: 100%;\n  box-sizing: content-box;\n  background-color: #fff;\n}\n.markdown-body img[align=right] {\n  padding-left: 20px;\n}\n.markdown-body img[align=left] {\n  padding-right: 20px;\n}\n.markdown-body code {\n  padding: 0.2em 0.4em;\n  margin: 0;\n  font-size: 85%;\n  background-color: rgba(27, 31, 35, 0.05);\n  border-radius: 3px;\n}\n.markdown-body pre {\n  word-wrap: normal;\n}\n.markdown-body pre > code {\n  padding: 0;\n  margin: 0;\n  font-size: 100%;\n  word-break: normal;\n  white-space: pre;\n  background: transparent;\n  border: 0;\n}\n.markdown-body .highlight {\n  margin-bottom: 16px;\n}\n.markdown-body .highlight pre {\n  margin-bottom: 0;\n  word-break: normal;\n}\n.markdown-body .highlight pre,\n.markdown-body pre {\n  padding: 16px;\n  overflow: auto;\n  font-size: 85%;\n  line-height: 1.45;\n  background-color: #f6f8fa;\n  border-radius: 3px;\n}\n.markdown-body pre code {\n  display: inline;\n  max-width: auto;\n  padding: 0;\n  margin: 0;\n  overflow: visible;\n  line-height: inherit;\n  word-wrap: normal;\n  background-color: transparent;\n  border: 0;\n}\n.markdown-body .full-commit .btn-outline:not(:disabled):hover {\n  color: #005cc5;\n  border-color: #005cc5;\n}\n.markdown-body kbd {\n  display: inline-block;\n  padding: 3px 5px;\n  font: 11px "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace;\n  line-height: 10px;\n  color: #444d56;\n  vertical-align: middle;\n  background-color: #fafbfc;\n  border: solid 1px #d1d5da;\n  border-bottom-color: #c6cbd1;\n  border-radius: 3px;\n  box-shadow: inset 0 -1px 0 #c6cbd1;\n}\n.markdown-body :checked + .radio-label {\n  position: relative;\n  z-index: 1;\n  border-color: #0366d6;\n}\n.markdown-body .task-list-item {\n  list-style-type: none;\n}\n.markdown-body .task-list-item + .task-list-item {\n  margin-top: 3px;\n}\n.markdown-body .task-list-item input {\n  margin: 0 0.2em 0.25em -1.6em;\n  vertical-align: middle;\n}\n.markdown-body hr {\n  border-bottom-color: #eee;\n}\na:link {\n  color: black;\n  text-decoration: none;\n}\na:hover,\na:active {\n  text-decoration: underline;\n}\n.logo {\n  max-width: 1.5em;\n  max-height: 1.5em;\n}\n.logo.big {\n  font-size: 3rem;\n}\n.no-select {\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.table-row {\n  display: table;\n  width: 100%;\n}\n.table-row > * {\n  display: table-cell;\n  vertical-align: top;\n  padding: 0.5em;\n}\n:host {\n  display: inline-block;\n  outline: none;\n}\n.table-row > aside {\n  text-align: center;\n}\n.table-row > aside > a {\n  display: block;\n  margin: 0.25rem 0;\n}\ndiv > h1 {\n  margin-top: 0;\n}\n.open {\n  color: #fff;\n  background-color: #28a745;\n}\n.closed {\n  color: #fff;\n  background-color: #dc3545;\n}\n.merged {\n  color: #fff;\n  background-color: #007bff;\n}\nmain > div {\n  padding-left: 1em;\n}\ndetails > summary > * {\n  vertical-align: middle;\n}\nmark-down {\n  padding: 1em;\n}\n';
            exports.default = _default;
        }
    },
    './index.html': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            exports.default = void 0;
            var _default =
                '<template>\n    <div class="table-row">\n        <aside data-object="owner">\n            <img class="logo big" src="${view.avatar_url}">\n\n            <a target="_blank" href="${view.html_url}">\n                <strong>${view.login}</strong>\n            </a>\n        </aside>\n\n        <div data-object="detail">\n            <h1>\n                <span class="${view.state}">${view.state}</span>\n                <a target="_blank" href="${view.html_url}">${view.title}</a>\n            </h1>\n            <main>\n                <details>\n                    <summary>\n                        <img class="logo" src="${view.user.avatar_url}">\n                        <a target="_blank" href="${view.html_url}">\n                            <strong>${view.user.login}</strong>\n                        </a>\n                        opened this at\n                        <time datetime="${view.created_at}">\n                            ${new Date(view.created_at).toLocaleString()}\n                        </time>\n                    </summary>\n                    <mark-down class="markdown-body">${view.body}</mark-down>\n                </details>\n                <div data-array="comment">\n                    <template>\n                        <details>\n                            <summary>\n                                <img class="logo" src="${view.user.avatar_url}">\n                                <a target="_blank" href="${view.html_url}">\n                                    <strong>${view.user.login}</strong>\n                                </a>\n                                commented at\n                                <time datetime="${view.created_at}">\n                                    ${new\n                                    Date(view.created_at).toLocaleString()}\n                                </time>\n                            </summary>\n                            <mark-down class="markdown-body">\n                                ${view.body}\n                            </mark-down>\n                        </details>\n                    </template>\n                </div>\n            </main>\n        </div>\n    </div>\n</template>\n';
            exports.default = _default;
        }
    },
    './index': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            exports.default = void 0;

            var _webCell = require('web-cell');

            var _githubElement = _interopRequireDefault(
                require('github-element')
            );

            var _index = _interopRequireDefault(require('./index.html'));

            var _index2 = _interopRequireDefault(require('./index.less'));

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule
                    ? obj
                    : {
                          default: obj
                      };
            }

            var GithubIssue = _decorate(
                [
                    (0, _webCell.component)({
                        template: _index.default,
                        style: _index2.default
                    })
                ],
                function(_initialize, _githubElement$defaul) {
                    var GithubIssue =
                        /*#__PURE__*/
                        (function(_githubElement$defaul2) {
                            _inherits(GithubIssue, _githubElement$defaul2);

                            function GithubIssue() {
                                var _this;

                                _classCallCheck(this, GithubIssue);

                                _this = _possibleConstructorReturn(
                                    this,
                                    _getPrototypeOf(GithubIssue).call(this)
                                );

                                _initialize(
                                    _assertThisInitialized(
                                        _assertThisInitialized(_this)
                                    )
                                );

                                return _this;
                            }

                            return GithubIssue;
                        })(_githubElement$defaul);

                    return {
                        F: GithubIssue,
                        d: [
                            {
                                kind: 'get',
                                decorators: [_webCell.mapProperty],
                                static: true,
                                key: 'observedAttributes',
                                value: function value() {
                                    return _get(
                                        _getPrototypeOf(GithubIssue),
                                        'observedAttributes',
                                        this
                                    ).concat('repo', 'issue', 'pull');
                                }
                            },
                            {
                                kind: 'method',
                                decorators: [_webCell.mapData],
                                key: 'attributeChangedCallback',
                                value: function value() {}
                            },
                            {
                                kind: 'method',
                                key: 'viewChangedCallback',
                                value: (function() {
                                    var _value = _asyncToGenerator(
                                        /*#__PURE__*/
                                        regeneratorRuntime.mark(
                                            function _callee(_ref) {
                                                var user,
                                                    org,
                                                    repo,
                                                    issue,
                                                    pull,
                                                    _ref2,
                                                    _ref3,
                                                    detail,
                                                    owner;

                                                return regeneratorRuntime.wrap(
                                                    function _callee$(
                                                        _context
                                                    ) {
                                                        while (1) {
                                                            switch (
                                                                (_context.prev =
                                                                    _context.next)
                                                            ) {
                                                                case 0:
                                                                    (user =
                                                                        _ref.user),
                                                                        (org =
                                                                            _ref.org),
                                                                        (repo =
                                                                            _ref.repo),
                                                                        (issue =
                                                                            _ref.issue),
                                                                        (pull =
                                                                            _ref.pull);

                                                                    if (
                                                                        !(
                                                                            !(
                                                                                user ||
                                                                                org
                                                                            ) ||
                                                                            !repo ||
                                                                            !(
                                                                                issue ||
                                                                                pull
                                                                            )
                                                                        )
                                                                    ) {
                                                                        _context.next = 3;
                                                                        break;
                                                                    }

                                                                    return _context.abrupt(
                                                                        'return'
                                                                    );

                                                                case 3:
                                                                    _context.next = 5;
                                                                    return Promise.all(
                                                                        [
                                                                            this.fetch(
                                                                                'repos/'
                                                                                    .concat(
                                                                                        user ||
                                                                                            org,
                                                                                        '/'
                                                                                    )
                                                                                    .concat(
                                                                                        repo,
                                                                                        '/'
                                                                                    )
                                                                                    .concat(
                                                                                        pull
                                                                                            ? 'pull'
                                                                                            : 'issue',
                                                                                        's/'
                                                                                    )
                                                                                    .concat(
                                                                                        pull ||
                                                                                            issue
                                                                                    )
                                                                            ),
                                                                            this.fetch(
                                                                                ''
                                                                                    .concat(
                                                                                        org
                                                                                            ? 'org'
                                                                                            : 'user',
                                                                                        's/'
                                                                                    )
                                                                                    .concat(
                                                                                        org ||
                                                                                            user
                                                                                    )
                                                                            )
                                                                        ]
                                                                    );

                                                                case 5:
                                                                    _ref2 =
                                                                        _context.sent;
                                                                    _ref3 = _slicedToArray(
                                                                        _ref2,
                                                                        2
                                                                    );
                                                                    detail =
                                                                        _ref3[0];
                                                                    owner =
                                                                        _ref3[1];
                                                                    _context.next = 11;
                                                                    return this.fetch(
                                                                        detail.comments_url
                                                                    );

                                                                case 11:
                                                                    detail.comment =
                                                                        _context.sent;
                                                                    if (
                                                                        detail.merged
                                                                    )
                                                                        detail.state =
                                                                            'merged';
                                                                    this.view.render(
                                                                        {
                                                                            owner: owner,
                                                                            detail: detail
                                                                        }
                                                                    );

                                                                case 14:
                                                                case 'end':
                                                                    return _context.stop();
                                                            }
                                                        }
                                                    },
                                                    _callee,
                                                    this
                                                );
                                            }
                                        )
                                    );

                                    return function value(_x) {
                                        return _value.apply(this, arguments);
                                    };
                                })()
                            }
                        ]
                    };
                },
                _githubElement.default
            );

            exports.default = GithubIssue;
        }
    },
    'web-cell': {
        exports: web_cell
    },
    'github-element': {
        exports: github_element
    }
};

    return _include_('./index');
});